name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.7, 3.8, 3.9, '3.10', '3.11']

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
    
    - name: Test TinyCL comprehensive suite
      run: |
        python examples/tinycl_language/comprehensive_test.py
    
    - name: Test PEG library examples
      run: |
        python examples/peg_usage/basic/simple_parser.py
        python examples/peg_usage/basic/minimal_example.py
    
    - name: Test TinyCL compiler
      run: |
        python src/tinycl/compiler.py
    
    - name: Test TinyCL language programs
      run: |
        python -c "
        import sys
        sys.path.insert(0, '.')
        from src.tinycl.parser import TinyCLParser
        from src.tinycl.interpreter import TinyCLInterpreter
        parser = TinyCLParser()
        interpreter = TinyCLInterpreter()
        with open('examples/tinycl_language/basic/hello_world.tcl') as f:
            program = f.read()
        ast = parser.parse(program)
        interpreter.interpret(ast)
        print('âœ… TinyCL programs work correctly')
        "

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install linting tools
      run: |
        python -m pip install --upgrade pip
        pip install flake8
    
    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 src --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 src --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
